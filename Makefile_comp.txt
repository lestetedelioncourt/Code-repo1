==> Makefile <==
TARGET: multiply
multiply: multiply.c serialized_buffer.o
	gcc -g multiply.c serialized_buffer.o -o multiply -std=gnu99
	make clean
serialized_buffer.o: serialized_buffer.c
	gcc -g -c serialized_buffer.c -o serialized_buffer.o -std=gnu99
clean: 
	rm serialized_buffer.o
	rm intlinkedlist.o
	rm tree1.o
	rm server.o
	rm client.o
cleanall:
	rm multiply

==> Mk0 <==
TARGET: main 
main: main.c intlinkedlist.o serialized_buffer.o tree1.o
	gcc -g main.c intlinkedlist.o serialized_buffer.o tree1.o -o main -std=gnu99
	make clean
serialized_buffer.o: serialized_buffer.c
	gcc -g -c serialized_buffer.c -o serialized_buffer.o -std=gnu99
intlinkedlist.o: intlinkedlist.c serialized_buffer.o
	gcc -g -c intlinkedlist.c -o intlinkedlist.o -std=gnu99
tree1.o: tree1.c
	gcc -g -c tree1.c -o tree1.o -std=gnu99
clean: 
	rm serialized_buffer.o
	rm intlinkedlist.o
	rm tree1.o
	rm server.o
	rm client.o

==> Mk1 <==
TARGET: main1 
main1: main1.c intlinkedlist.o serialized_buffer.o tree1.o server.o
	gcc -g main1.c intlinkedlist.o server.o serialized_buffer.o tree1.o -o main1 -std=gnu99
	make clean
serialized_buffer.o: serialized_buffer.c
	gcc -g -c serialized_buffer.c -o serialized_buffer.o -std=gnu99
intlinkedlist.o: intlinkedlist.c serialized_buffer.o
	gcc -g -c intlinkedlist.c -o intlinkedlist.o -std=gnu99
tree1.o: tree1.c
	gcc -g -c tree1.c -o tree1.o -std=gnu99
server.o: server.c
	gcc -g -c server.c -o server.o -std=gnu99
clean: 
	rm serialized_buffer.o
	rm intlinkedlist.o
	rm tree1.o
	rm server.o
	rm client.o
cleanall:
	rm main1

==> Mk2 <==
TARGET: main2
main2: main2.c intlinkedlist.o client.o serialized_buffer.o tree1.o
	gcc -g main2.c intlinkedlist.o client.o serialized_buffer.o tree1.o -o main2 -std=gnu99
	make clean
serialized_buffer.o: serialized_buffer.c
	gcc -g -c serialized_buffer.c -o serialized_buffer.o -std=gnu99
intlinkedlist.o: intlinkedlist.c serialized_buffer.o
	gcc -g -c intlinkedlist.c -o intlinkedlist.o -std=gnu99
tree1.o: tree1.c
	gcc -g -c tree1.c -o tree1.o -std=gnu99
client.o:
	gcc -g -c client.c -o client.o -std=gnu99
clean: 
	rm serialized_buffer.o
	rm intlinkedlist.o
	rm tree1.o
	rm server.o
	rm client.o

==> Mkclient <==
TARGET: multiply
multiply: multiply.c serialized_buffer.o
	gcc -g multiply.c serialized_buffer.o -o multiply -std=gnu99
	make clean
serialized_buffer.o: serialized_buffer.c
	gcc -g -c serialized_buffer.c -o serialized_buffer.o -std=gnu99
clean: 
	rm serialized_buffer.o
	rm intlinkedlist.o
	rm tree1.o
	rm server.o
	rm client.o
cleanall:
	rm multiply

==> Mkcomp <==
TARGET: comp
comp: comp.c serialized_buffer.o
	gcc -g comp.c serialized_buffer.o -o comp -std=gnu99
	make clean
serialized_buffer.o: serialized_buffer.c
	gcc -g -c serialized_buffer.c -o serialized_buffer.o -std=gnu99
clean: 
	rm serialized_buffer.o
	rm intlinkedlist.o
	rm tree1.o
	rm server.o
	rm client.o
cleanall:
	rm comp

==> Mkserv <==
TARGET: rpc_server_main
rpc_server_main: rpc_server_main.c serialized_buffer.o
	gcc -g rpc_server_main.c serialized_buffer.o -o rpc_server_main -std=gnu99
	make clean
serialized_buffer.o: serialized_buffer.c
	gcc -g -c serialized_buffer.c -o serialized_buffer.o -std=gnu99
clean: 
	rm serialized_buffer.o
	rm intlinkedlist.o
	rm tree1.o
	rm server.o
	rm client.o
cleanall:
	rm rpc_server_main

==> Mktree <==
TARGET: comp
comp: comp.c serialized_buffer.o
	gcc -g comp.c serialized_buffer.o -o comp -std=gnu99
	make clean
serialized_buffer.o: serialized_buffer.c
	gcc -g -c serialized_buffer.c -o serialized_buffer.o -std=gnu99
clean: 
	rm serialized_buffer.o
	rm intlinkedlist.o
	rm tree1.o
	rm server.o
	rm client.o
cleanall:
	rm comp

==> LinuxMemoryManagement/06_kmalloc_memleak/Makefile <==
obj-m := kmalloc_memleak.o

all:
	make -C /lib/modules/`uname -r`/build M=$(PWD) modules
	gcc userapp.c -o userapp
clean:
	make -C /lib/modules/`uname -r`/build M=$(PWD) clean
	rm userapp

==> LinuxSynchronizationConcurrency/sec04/04_spinlock_chardriver/Makefile <==
obj-m := spinlock_chardriver.o

all:
	make -C /lib/modules/`uname -r`/build M=$(PWD) modules
	gcc userapp.c -o userapp
clean:
	make -C /lib/modules/`uname -r`/build M=$(PWD) clean
	rm userapp

==> LinuxSynchronizationConcurrency/sec04/05_spin_trylock/Makefile <==
obj-m := spin_trylock.o

all:
	make -C /lib/modules/`uname -r`/build M=$(PWD) modules
	gcc userapp.c -o userapp
clean:
	make -C /lib/modules/`uname -r`/build M=$(PWD) clean
	rm userapp

==> LinuxCharacterDeviceDrivers/sec3/09_unsupported_command_ioctl/Makefile <==
obj-m := unsupportedioctlcmdrepsonse.o
#obj-m := comp.o

all:
	make -C /lib/modules/`uname -r`/build M=$(PWD) modules
	gcc userapp.c -o userapp
clean:
	make -C /lib/modules/`uname -r`/build M=$(PWD) clean
	rm userapp

==> LinuxCharacterDeviceDrivers/sec3/10_driver_access_ok/Makefile <==
obj-m := access_ok_macro.o

all:
	make -C /lib/modules/`uname -r`/build M=$(PWD) modules
	gcc userapp1.c -o userapp1
	gcc userapp2.c -o userapp2
clean:
	make -C /lib/modules/`uname -r`/build M=$(PWD) clean
	rm userapp1 userapp2

==> LinuxCharacterDeviceDrivers/sec3/12_signal_module_process/Makefile <==
obj-m := ioctl_signal.o

all:
	make -C /lib/modules/`uname -r`/build M=$(PWD) modules
	gcc userapp1.c -o userapp1
	gcc userapp2.c -o userapp2
clean:
	make -C /lib/modules/`uname -r`/build M=$(PWD) clean
	rm userapp1 userapp2

==> LinuxCharacterDeviceDrivers/sec2/03_fops/Makefile <==
obj-m := struct_file.o

all:
	make -C /lib/modules/`uname -r`/build M=$(PWD) modules
clean:
	make -C /lib/modules/`uname -r`/build M=$(PWD) clean
userapp:
	gcc userapp.c -o userapp
cleanuser:
	rm userapp

==> LinuxCharacterDeviceDrivers/sec2/08_copy_to_user/Makefile <==
obj-m := copy_to_user.o

all:
	make -C /lib/modules/`uname -r`/build M=$(PWD) modules
	gcc userapp.c -o userapp
	gcc userapp1.c -o userapp1
	gcc userapp2.c -o userapp2
clean:
	make -C /lib/modules/`uname -r`/build M=$(PWD) clean
	rm userapp userapp1 userapp2

==> LinuxCharacterDeviceDrivers/sec2/21_lseek/Makefile <==
obj-m := lseek.o

all:
	make -C /lib/modules/`uname -r`/build M=$(PWD) modules
	gcc userapp.c -o userapp
clean: 
	make -C /lib/modules/`uname -r`/build M=$(PWD) clean
	gcc userapp




==> LinuxCharacterDeviceDrivers/sec2/19_offsetupdatesolution/Makefile <==
obj-m := offset_update.o

all:
	make -C /lib/modules/`uname -r`/build M=$(PWD) modules
	gcc userapp1.c -o userapp1
	gcc userapp2.c -o userapp2
	gcc userapp3.c -o userapp3
clean:
	make -C /lib/modules/`uname -r`/build M=$(PWD) clean
	rm userapp1
	rm userapp2
	rm userapp3
